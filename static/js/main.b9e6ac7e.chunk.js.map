{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Search","props","state","res","title","handleChange","e","target","value","handleSubmit","preventDefault","fetch","then","response","json","jsonData","setState","console","log","className","onSubmit","this","onChange","ref","type","placeholder","results","map","description","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"gOAmEeA,E,kDA/Dd,WAAYC,GAAO,IAAD,8BACnB,cAAMA,IACDC,MAAQ,CACXC,IAAK,IAGP,EAAKA,IAAM,GACX,EAAKC,MAAQ,GACb,EAAKC,aAAe,SAACC,GACnB,EAAKF,MAAQE,EAAEC,OAAOC,OAGxB,EAAKC,aAAe,SAACH,GAEnBA,EAAEI,iBAEFC,MAAM,2DAAD,OAA4D,EAAKP,QACrEQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,EAAKC,SAAS,CACZb,IAAKY,IAEPE,QAAQC,IAAIH,OAtBG,E,0CA4BlB,WAEC,OACA,sBAAKI,UAAU,uBAAf,UACE,6CACA,uBAAMC,SAAUC,KAAKZ,aAArB,UACA,qBAAKU,UAAU,aAAf,SACE,uBAAOG,SAAUD,KAAKhB,aAAcc,UAAU,eAAeI,IAAI,QAAQC,KAAK,OAAOC,YAAY,kBAEjG,qBAAKN,UAAU,aAAf,SACA,wBAASK,KAAK,SAASL,UAAU,kBAAjC,yBAGF,8BACE,wBAAOA,UAAU,sBAAjB,UACE,gCACA,+BACE,uCACA,kDAGF,gCAGFE,KAAKnB,MAAMC,IAAIuB,SACfL,KAAKnB,MAAMC,IAAIuB,QAAQC,KAAI,SAAAxB,GAAG,OAAI,+BAAI,6BAAKA,EAAIC,QAAW,6BAAKD,EAAIyB,kC,GAtDpDC,aCSNC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9e6ac7e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Search extends Component{\n constructor(props){\nsuper(props)\nthis.state = {\n  res: []\n\n}\nthis.res = ''\nthis.title = ''\nthis.handleChange = (e) => {\n  this.title = e.target.value\n  //console.log(this.title);\n}\nthis.handleSubmit = (e) => {\n  let results = '';\n  e.preventDefault();\n  \n  fetch(`https://help-search-api-prod.herokuapp.com/search?query=${this.title}`)\n  .then(response => response.json())\n  .then(jsonData => {\n    this.setState({\n      res: jsonData\n    })\n    console.log(jsonData)\n  })\n\n}\n\n}\n render(){\n\n  return (\n  <div className=\"offset-md-3 col-md-6\">\n    <h2>Search form</h2>\n    <form onSubmit={this.handleSubmit} >\n    <div className=\"form-group\">\n      <input onChange={this.handleChange} className=\"form-control\" ref=\"title\" type=\"text\" placeholder=\"Enter title\"></input>\n      </div>\n      <div className=\"form-group\">\n      <button  type=\"submit\" className=\"btn btn-primary\">Submit</button>\n    </div>\n    </form>\n    <div>\n      <table className=\"table table-striped\" >\n        <thead>\n        <tr>\n          <th>Title</th>\n          <th>Description</th>\n        </tr>\n        </thead>\n        <tbody>\n\n    {\n      this.state.res.results &&\n      this.state.res.results.map(res => <tr><td>{res.title}</td><td>{res.description}</td></tr>)\n    }\n    </tbody>\n    </table>\n </div>\n  </div>\n)\n }\n}\n\nexport default Search","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}